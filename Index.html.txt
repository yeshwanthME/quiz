<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="./style.css">
<style>
 :root{
    --hue-neutral: 200;   /* Defines a color hue for neutral elements (e.g., a shade of blue). */
    --hue-wrong: 0;      /* Defines a color hue for Incorrect elements (e.g., red). */
    --hue-correct: 145;  /* Defines a color hue for correct elements (e.g., green). */
}
body{
    --hue : var(--hue-neutral);
    padding: 0;
    margin: 0;
    display: flex;
    width: 100vw;
    height: 100vh;
    justify-content: center;
    align-items: center;
    background: hsl(var(--hue), 100%, 20%);
}
body.correct{
    --hue: var(--hue-correct);
}
body.wrong{
    --hue: var(--hue-wrong);
}
.container{
    width: 800px;
    max-width: 80%;
    background-color: white;
    border-radius: 5px;
    padding: 10px;
    box-shadow: 0 0 10px 2px;
}
.btn-grid{
    display: grid;
    grid-template-columns: repeat(2, auto);
    gap: 10px;
    margin: 20px 0;
}
.btn{
    --hue: var(--hue-neutral);
    border: 1px solid hsl(var(--hue), 10%, 30%);
    background-color: hsl(var(--hue), 10%, 50%);
    border-radius: 5px;
    padding: 5px 10px;
    color: white;
}
.btn:hover{
    border-color: black;
}
.controls button{
    margin-right: 5px;
}
.start-btn, .next-btn{
    font-size: 1.5rem;
    font-weight: bold;
    padding: 10px 20px;
    cursor: pointer;
}
.controls{
    display: flex;
    justify-content: center;
    align-items: center;
}
.hide{
    display: none;
}

</style>
</head>
<body>
    <div class="container">
        <div id="question-container" class="hide">
            <div id="question"></div>
            <div id="answer-buttons" class="btn-grid">
                <button class="btn" onclick="myFunction()">Answer 1</button>
                <button class="btn" onclick="myFunction()">Answer 2</button>
                <button class="btn" onclick="myFunction()">Answer 3</button>
                <button class="btn" onclick="myFunction()">Answer 4</button>
            </div>
        </div>
        <div class="controls">
            <button id="start-btn" class="start-btn btn">Start</button>
            <button id="next-btn" class="next-btn btn hide">Next</button>
        </div>
    </div>
    <div class="score">
        <span id="right-answers"></span>
    </div>

    <script>
const startButton = document.getElementById('start-btn');
const nextButton = document.getElementById('next-btn');

const questionContainerElement = document.getElementById('question-container');
const questionElement = document.getElementById('question');
const answerButtonsElement = document.getElementById('answer-buttons');

let shuffledQuestions, currectQuestionIndex;
let quizScore = 0;

startButton.addEventListener('click', startGame)

nextButton.addEventListener('click', ()=> {
    currectQuestionIndex++
    setnextQuestion()

})

function startGame(){
    debugger // 1
    startButton.classList.add('hide')
    shuffledQuestions = question.sort(function(){
        Math.random() - 0.5
    });
    currectQuestionIndex = 0;
    debugger // 1.2
    questionContainerElement.classList.remove('hide')
    setnextQuestion()
    quizScore = 0
    }


function setnextQuestion(){
    resetState();
    showQuestion(shuffledQuestions[currectQuestionIndex])
}


function resetState(){
    clearStatusClass(document.body)
    nextButton.classList.add('hide')
    while(answerButtonsElement.firstChild){
        answerButtonsElement.removeChild(answerButtonsElement.firstChild)
    }
}

function selectAnswer(e){
    const selectedButton = e.target
    const correct = selectedButton.dataset.correct

    setStatusClass(document.body, correct)
    Array.from(answerButtonsElement.children).forEach((button)=>{
        setStatusClass(button, button.dataset.correct)
    
})
  if(shuffledQuestions.length > currectQuestionIndex + 1){
    nextButton.classList.remove('hide')
  }else{
    startButton.innerText = 'restart'
    startButton.classList.remove('hide')
  }

  if(selectedButton.dataset = correct){
    quizScore++
  }
  document.getElementById('right-answers').innerText = quizScore
}


function setStatusClass(element, correct){
    clearStatusClass(element)
    if(correct){
        element.classList.add('correct')
    }else{
        element.classList.add('wrong')
    }
}

function clearStatusClass(element){
    element.classList.remove('correct')
    element.classList.remove('wrong')
}

function showQuestion(question) {
debugger // 2
    questionElement.innerText = question.question;
    question.answers.forEach((answer)=>{
        const button = document.createElement('button')
            button.innerText = answer.text;
            button.classList.add('btn')
            if(answer.correct){
                button.dataset.correct = answer.correct
            }
            button.addEventListener('click', selectAnswer)
            answerButtonsElement.appendChild(button)
    });
}

const question = [
    {
        question: 'JS was introduced in',
        answers: [
            {text: '1991', correct: false},
            {text: '1995', correct: true},
            {text: '1998', correct: false},
            {text: '2005', correct: false},
        ]
    },
    {
        question: 'Which among this is JS framework',
        answers: [
            {text: 'Python', correct: false},
            {text: 'Django', correct: false},
            {text: 'React', correct: true},
            {text: 'Eclipse', correct: false},
        ]
    },
    {
        question: 'Which among this is not a JS datatypes',
        answers: [
            {text: 'symboles', correct: false},
            {text: 'array', correct: false},
            {text: 'string', correct: false},
            {text: 'camelCases', correct: true},
        ]
    },
]
   </script>
</body>
</html>